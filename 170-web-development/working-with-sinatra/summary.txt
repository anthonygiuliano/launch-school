In this lesson we learned:
• Sinatra is a small web framework
• HTTP requests are handled in Sinatra by creating `routes` for a path or set of paths
• Routes are created using methods named after the HTTP method to be handled. So, a `GET` request is handled by a route definted using the `get` Sinatra method.
• View templates can be written in many templating languages, such as ERB. They provide a place to define the HTML display of a response outside of the route handling it. Templating languages are usually better suited to descriving HTML than plain ruby.
• A layout is a view template that surrounds a specific response's template. They are used to provide shared HTML that is used by all views, and often include links to stylesheets and JS files.
• Routes can specify parameters by using colon followed by the parameter name: `/chapters/:number`. In this case, the value would be accessible within the route using `params[:number]`.
• Code placed in a `before` block is executed before the matching route for every request.
• View helpers are Ruby methods that are used to minimize the amount of Ruby code included in a view template. These methods are defined within a `helpers` block in Sinatra.
• A user can be sent to a new location in response to a request by redirecting. This in done in Sinatra using the `redirect` method.
• The files in a project can be identified as either server-side or client-side code based on where they are evaluated.
